<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="ServerResponse" Id="{01d8908d-0d42-4ebb-ab3f-dd0bcd0619c3}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK ServerResponse IMPLEMENTS I_ServerResponse
VAR
	_header : ServerResponseHeader;
	_sent : BOOL := FALSE;
	destination : REFERENCE TO ResponseData;
	config : I_ServerResponseConfig;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{eecda43b-278b-4c0f-82ba-ef0138d22b11}" />
    <Folder Name="Private" Id="{b6abcce5-8d92-4eee-bdc0-26f5665fa12d}" />
    <Method Name="Accepted" Id="{6a11cffb-86d6-447b-9122-22fe8e08261c}">
      <Declaration><![CDATA[METHOD PUBLIC Accepted
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _sent THEN
	RETURN;
END_IF

config.UpdateResponseWithAccepted(THIS^);
SendHeaderToDestination();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Busy" Id="{efb4c96f-8c99-484e-a56e-0f202efa6c3e}">
      <Declaration><![CDATA[METHOD PUBLIC Busy
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _sent THEN
	RETURN;
END_IF

config.UpdateResponseWithBusy(THIS^);
SendHeaderToDestination();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Error" Id="{4133beb7-3ac7-45de-a9b6-b0641db40855}">
      <Declaration><![CDATA[METHOD PUBLIC Error
VAR_INPUT
	Message : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _sent THEN
	RETURN;
END_IF

config.UpdateResponseWithError(THIS^, Message);
SendHeaderToDestination();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{93971270-1190-4214-90ce-2458ab5b9410}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	Destination : REFERENCE TO ResponseData;
	Config : I_ServerResponseConfig;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.destination REF= Destination;
This^.config := Config;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Header" Id="{1a5384de-2402-4919-b8b4-9eb07e9635aa}">
      <Declaration><![CDATA[PROPERTY PUBLIC Header : I_ServerResponseHeader]]></Declaration>
      <Get Name="Get" Id="{4d604038-9716-4bda-9a20-2c4af0caacb0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Header := _header;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="HeadersSent" Id="{89071bf7-7d84-4f78-917f-6db1b9f33b9e}">
      <Declaration><![CDATA[PROPERTY PUBLIC HeadersSent : BOOL]]></Declaration>
      <Get Name="Get" Id="{5e45cf4a-1c2f-444b-9783-839183a7d28a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[HeadersSent := _sent;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Pending" Id="{98b7607b-50e5-434a-a5ec-86c02f0b4693}">
      <Declaration><![CDATA[METHOD PUBLIC Pending
VAR_INPUT
	ResponseId : T_MAXSTRING;
	RetryDelayInMs : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _sent THEN
	RETURN;
END_IF

config.UpdateResponseWithPending(THIS^, ResponseId, RetryDelayInMs);
SendHeaderToDestination();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SendHeaderToDestination" Id="{c605e081-68c8-4516-bd6d-89fc22f16ff1}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE SendHeaderToDestination
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_sent := TRUE;
_header.ToString(destination.Header);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Success" Id="{a0f936ba-3243-4794-876f-bbdda8e73d58}">
      <Declaration><![CDATA[METHOD PUBLIC Success
VAR_INPUT
	PayloadDataAddress : PVOID;
	PayloadDataSize : UDINT;
END_VAR
VAR
	errorMessage : T_MAXSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _sent THEN
	RETURN;
END_IF

IF PayloadDataSize > SIZEOF(destination.Payload) THEN
	errorMessage := 'Payload too big to transmit. Maximum : ';
	errorMessage := concat(errorMessage, UDINT_TO_STRING(SIZEOF(destination.Payload)));
	errorMessage := concat(errorMessage, ', Actual Size : ');
	errorMessage := concat(errorMessage, UDINT_TO_STRING(SIZEOF(PayloadDataSize)));
	Error(errorMessage);
	RETURN;
END_IF

config.UpdateResponseWithSuccess(THIS^);
SendHeaderToDestination();
memcpy(ADR(destination.Payload),PayloadDataAddress,PayloadDataSize);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="ServerResponse">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="ServerResponse.Accepted">
      <LineId Id="76" Count="1" />
      <LineId Id="72" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="66" Count="0" />
    </LineIds>
    <LineIds Name="ServerResponse.Busy">
      <LineId Id="76" Count="1" />
      <LineId Id="72" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="66" Count="0" />
    </LineIds>
    <LineIds Name="ServerResponse.Error">
      <LineId Id="76" Count="1" />
      <LineId Id="72" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="66" Count="0" />
    </LineIds>
    <LineIds Name="ServerResponse.FB_init">
      <LineId Id="7" Count="0" />
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="ServerResponse.Header.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="ServerResponse.HeadersSent.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="ServerResponse.Pending">
      <LineId Id="76" Count="1" />
      <LineId Id="72" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="66" Count="0" />
    </LineIds>
    <LineIds Name="ServerResponse.SendHeaderToDestination">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="ServerResponse.Success">
      <LineId Id="93" Count="1" />
      <LineId Id="92" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="80" Count="7" />
      <LineId Id="90" Count="1" />
      <LineId Id="89" Count="0" />
      <LineId Id="78" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>